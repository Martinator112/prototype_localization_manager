Necessary steps for successful deployment:

1) SETUPING FIREBASE

a) 
Setup new project in Firebase console at the address https://console.firebase.google.com/

b) 
After successful login, it is necessary to continue navigating to "project settings" (next to the "overview" is an icon, look to the top left corner).
Afterwards, it is necessary to click on "service accounts" tab in navigation menu.
In the tab is a button called "generate private key" which will generate credentials for the project.
Then the user should automatically receive an option to download credentials in form of a JSON file. It is necessary to keep this JSON somewhere safe.
Another option is navigating straight to the "https://console.firebase.google.com/project/<name_of_your_firebase_project>/settings/serviceaccounts/adminsdk".
Be aware that user interface or link can change in future.

c) 
Copy generated credentials(JSON file downloaded from firebase console) to conf/LocalizationManagerCredentials.json inside BACKEND application folder.

d) 
Continue by setting firebase.databaseUrl in conf/firebase.conf file to the url of firebase real-time database.
Again, this can be found in firebase console.
File located on github: https://github.com/Martinator112/prototype_localization_manager_api/blob/master/conf/firebase.conf .

2) SETUPING OAUTH2
In this step you can use guide provided by google on URL: https://developers.google.com/identity/sign-in/web/devconsole-project.

a)
Navigate to URL https://console.developers.google.com
In the upper navbar there should be the project drop-down.
Click on the dropdown and create new project by selecting "Create a new project".
Select the appropriate name for project and continue by clicking the "OK" button.
Continue by selecting "Credentials" in left sidebar.
Next, click on the "OAuth consent screen" in the Credentials tab menu.
Choose your product(project) name and fill it into field "Product name shown to users" and save.Continue by selecting "Credentials" tab. Next, click on the "Create credentials" button and select "OAuth client ID".
Continue by selecting "Web Application".
Afterwards, fill in frontend url into "Authorized JavaScript origins" section(e.g. https://myFrontEndServer.com).

Continue by filling in backend url handling redirection (e.g. https://<host>/auth/google/handler) into "Authorized redirect URIs" section.
Do not forget to click "Create" button and check the fields.

b)
You will be prompted with you client ID and client secret.
You need to copy this into "conf/google.oauth2.conf" file inside BACKEND application folder.



3) 
Locate "app.config.json" file inside src folder in FRONTEND application.
Fill in the URL of backend application.

4)
Locate "http.client.conf" file inside "conf" folder in BACKEND application.
Fill in the URL of frontend application.
File located on github: https://github.com/Martinator112/prototype_localization_manager_api/blob/master/conf/http.client.conf
